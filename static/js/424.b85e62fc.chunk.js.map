{"version":3,"file":"static/js/424.b85e62fc.chunk.js","mappings":"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AAII,KAAKT,MACjDxL,EAAIwL,IAiBR,OAZAI,EAAMxB,GADNuB,EAAKN,GAEEY,KAAKjM,IAAM4L,EAAIK,KAAKjM,KACzB2L,EAAKhB,EACL3K,EAAIA,EAAE0B,QAAQiK,EAAG,KAKJ,KAAXD,IACF1L,EAAI0L,EAAQxF,cAAgBlG,EAAE+L,OAAO,IAGhC/L,GAGT,OAAO,SAAUwB,GACf,OAAOA,EAAMC,OAAO8J,IAxMR,GA4MhBtO,EAAK2J,SAASG,iBAAiB9J,EAAKkF,QAAS,WAmB7ClF,EAAKmP,uBAAyB,SAAUC,GACtC,IAAIC,EAAQD,EAAUE,QAAO,SAAUrE,EAAMsE,GAE3C,OADAtE,EAAKsE,GAAYA,EACVtE,IACN,IAEH,OAAO,SAAU1G,GACf,GAAIA,GAAS8K,EAAM9K,EAAMsB,cAAgBtB,EAAMsB,WAAY,OAAOtB,IAiBtEvE,EAAKiF,eAAiBjF,EAAKmP,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGFnP,EAAK2J,SAASG,iBAAiB9J,EAAKiF,eAAgB,kBAqBpDjF,EAAKgF,QAAU,SAAUT,GACvB,OAAOA,EAAMC,QAAO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","sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/lunr-languages/lunr.stemmer.support.js","../node_modules/lunr/lunr.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/*!\n * Snowball JavaScript Library v0.3\n * http://code.google.com/p/urim/\n * http://snowball.tartarus.org/\n *\n * Copyright 2010, Oleg Mazko\n * http://www.mozilla.org/MPL/\n */\n\n/**\n * export the module via AMD, CommonJS or as a browser global\n * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n */\n;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory)\n    } else if (typeof exports === 'object') {\n        /**\n         * Node. Does not work with strict CommonJS, but\n         * only CommonJS-like environments that support module.exports,\n         * like Node.\n         */\n        module.exports = factory()\n    } else {\n        // Browser globals (root is window)\n        factory()(root.lunr);\n    }\n}(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return function(lunr) {\n        /* provides utilities for the included stemmers */\n        lunr.stemmerSupport = {\n            Among: function(s, substring_i, result, method) {\n                this.toCharArray = function(s) {\n                    var sLength = s.length, charArr = new Array(sLength);\n                    for (var i = 0; i < sLength; i++)\n                        charArr[i] = s.charCodeAt(i);\n                    return charArr;\n                };\n\n                if ((!s && s != \"\") || (!substring_i && (substring_i != 0)) || !result)\n                    throw (\"Bad Among initialisation: s:\" + s + \", substring_i: \"\n                        + substring_i + \", result: \" + result);\n                this.s_size = s.length;\n                this.s = this.toCharArray(s);\n                this.substring_i = substring_i;\n                this.result = result;\n                this.method = method;\n            },\n            SnowballProgram: function() {\n                var current;\n                return {\n                    bra : 0,\n                    ket : 0,\n                    limit : 0,\n                    cursor : 0,\n                    limit_backward : 0,\n                    setCurrent : function(word) {\n                        current = word;\n                        this.cursor = 0;\n                        this.limit = word.length;\n                        this.limit_backward = 0;\n                        this.bra = this.cursor;\n                        this.ket = this.limit;\n                    },\n                    getCurrent : function() {\n                        var result = current;\n                        current = null;\n                        return result;\n                    },\n                    in_grouping : function(s, min, max) {\n                        if (this.cursor < this.limit) {\n                            var ch = current.charCodeAt(this.cursor);\n                            if (ch <= max && ch >= min) {\n                                ch -= min;\n                                if (s[ch >> 3] & (0X1 << (ch & 0X7))) {\n                                    this.cursor++;\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    },\n                    in_grouping_b : function(s, min, max) {\n                        if (this.cursor > this.limit_backward) {\n                            var ch = current.charCodeAt(this.cursor - 1);\n                            if (ch <= max && ch >= min) {\n                                ch -= min;\n                                if (s[ch >> 3] & (0X1 << (ch & 0X7))) {\n                                    this.cursor--;\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    },\n                    out_grouping : function(s, min, max) {\n                        if (this.cursor < this.limit) {\n                            var ch = current.charCodeAt(this.cursor);\n                            if (ch > max || ch < min) {\n                                this.cursor++;\n                                return true;\n                            }\n                            ch -= min;\n                            if (!(s[ch >> 3] & (0X1 << (ch & 0X7)))) {\n                                this.cursor++;\n                                return true;\n                            }\n                        }\n                        return false;\n                    },\n                    out_grouping_b : function(s, min, max) {\n                        if (this.cursor > this.limit_backward) {\n                            var ch = current.charCodeAt(this.cursor - 1);\n                            if (ch > max || ch < min) {\n                                this.cursor--;\n                                return true;\n                            }\n                            ch -= min;\n                            if (!(s[ch >> 3] & (0X1 << (ch & 0X7)))) {\n                                this.cursor--;\n                                return true;\n                            }\n                        }\n                        return false;\n                    },\n                    eq_s : function(s_size, s) {\n                        if (this.limit - this.cursor < s_size)\n                            return false;\n                        for (var i = 0; i < s_size; i++)\n                            if (current.charCodeAt(this.cursor + i) != s.charCodeAt(i))\n                                return false;\n                        this.cursor += s_size;\n                        return true;\n                    },\n                    eq_s_b : function(s_size, s) {\n                        if (this.cursor - this.limit_backward < s_size)\n                            return false;\n                        for (var i = 0; i < s_size; i++)\n                            if (current.charCodeAt(this.cursor - s_size + i) != s\n                                .charCodeAt(i))\n                                return false;\n                        this.cursor -= s_size;\n                        return true;\n                    },\n                    find_among : function(v, v_size) {\n                        var i = 0, j = v_size, c = this.cursor, l = this.limit, common_i = 0, common_j = 0, first_key_inspected = false;\n                        while (true) {\n                            var k = i + ((j - i) >> 1), diff = 0, common = common_i < common_j\n                                ? common_i\n                                : common_j, w = v[k];\n                            for (var i2 = common; i2 < w.s_size; i2++) {\n                                if (c + common == l) {\n                                    diff = -1;\n                                    break;\n                                }\n                                diff = current.charCodeAt(c + common) - w.s[i2];\n                                if (diff)\n                                    break;\n                                common++;\n                            }\n                            if (diff < 0) {\n                                j = k;\n                                common_j = common;\n                            } else {\n                                i = k;\n                                common_i = common;\n                            }\n                            if (j - i <= 1) {\n                                if (i > 0 || j == i || first_key_inspected)\n                                    break;\n                                first_key_inspected = true;\n                            }\n                        }\n                        while (true) {\n                            var w = v[i];\n                            if (common_i >= w.s_size) {\n                                this.cursor = c + w.s_size;\n                                if (!w.method)\n                                    return w.result;\n                                var res = w.method();\n                                this.cursor = c + w.s_size;\n                                if (res)\n                                    return w.result;\n                            }\n                            i = w.substring_i;\n                            if (i < 0)\n                                return 0;\n                        }\n                    },\n                    find_among_b : function(v, v_size) {\n                        var i = 0, j = v_size, c = this.cursor, lb = this.limit_backward, common_i = 0, common_j = 0, first_key_inspected = false;\n                        while (true) {\n                            var k = i + ((j - i) >> 1), diff = 0, common = common_i < common_j\n                                ? common_i\n                                : common_j, w = v[k];\n                            for (var i2 = w.s_size - 1 - common; i2 >= 0; i2--) {\n                                if (c - common == lb) {\n                                    diff = -1;\n                                    break;\n                                }\n                                diff = current.charCodeAt(c - 1 - common) - w.s[i2];\n                                if (diff)\n                                    break;\n                                common++;\n                            }\n                            if (diff < 0) {\n                                j = k;\n                                common_j = common;\n                            } else {\n                                i = k;\n                                common_i = common;\n                            }\n                            if (j - i <= 1) {\n                                if (i > 0 || j == i || first_key_inspected)\n                                    break;\n                                first_key_inspected = true;\n                            }\n                        }\n                        while (true) {\n                            var w = v[i];\n                            if (common_i >= w.s_size) {\n                                this.cursor = c - w.s_size;\n                                if (!w.method)\n                                    return w.result;\n                                var res = w.method();\n                                this.cursor = c - w.s_size;\n                                if (res)\n                                    return w.result;\n                            }\n                            i = w.substring_i;\n                            if (i < 0)\n                                return 0;\n                        }\n                    },\n                    replace_s : function(c_bra, c_ket, s) {\n                        var adjustment = s.length - (c_ket - c_bra), left = current\n                            .substring(0, c_bra), right = current.substring(c_ket);\n                        current = left + s + right;\n                        this.limit += adjustment;\n                        if (this.cursor >= c_ket)\n                            this.cursor += adjustment;\n                        else if (this.cursor > c_bra)\n                            this.cursor = c_bra;\n                        return adjustment;\n                    },\n                    slice_check : function() {\n                        if (this.bra < 0 || this.bra > this.ket || this.ket > this.limit\n                            || this.limit > current.length)\n                            throw (\"faulty slice operation\");\n                    },\n                    slice_from : function(s) {\n                        this.slice_check();\n                        this.replace_s(this.bra, this.ket, s);\n                    },\n                    slice_del : function() {\n                        this.slice_from(\"\");\n                    },\n                    insert : function(c_bra, c_ket, s) {\n                        var adjustment = this.replace_s(c_bra, c_ket, s);\n                        if (c_bra <= this.bra)\n                            this.bra += adjustment;\n                        if (c_bra <= this.ket)\n                            this.ket += adjustment;\n                    },\n                    slice_to : function() {\n                        this.slice_check();\n                        return current.substring(this.bra, this.ket);\n                    },\n                    eq_v_b : function(s) {\n                        return this.eq_s_b(s.length, s);\n                    }\n                };\n            }\n        };\n\n        lunr.trimmerSupport = {\n            generateTrimmer: function(wordCharacters) {\n                var startRegex = new RegExp(\"^[^\" + wordCharacters + \"]+\")\n                var endRegex = new RegExp(\"[^\" + wordCharacters + \"]+$\")\n\n                return function(token) {\n                    // for lunr version 2\n                    if (typeof token.update === \"function\") {\n                        return token.update(function (s) {\n                            return s\n                                .replace(startRegex, '')\n                                .replace(endRegex, '');\n                        })\n                    } else { // for lunr version 1\n                        return token\n                            .replace(startRegex, '')\n                            .replace(endRegex, '');\n                    }\n                };\n            }\n        }\n    }\n}));\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["module","exports","define","lunr","stemmerSupport","Among","s","substring_i","result","method","this","toCharArray","sLength","length","charArr","Array","i","charCodeAt","s_size","SnowballProgram","current","bra","ket","limit","cursor","limit_backward","setCurrent","word","getCurrent","in_grouping","min","max","ch","in_grouping_b","out_grouping","out_grouping_b","eq_s","eq_s_b","find_among","v","v_size","j","c","l","common_i","common_j","first_key_inspected","k","diff","common","w","i2","res","find_among_b","lb","replace_s","c_bra","c_ket","adjustment","left","substring","right","slice_check","slice_from","slice_del","insert","slice_to","eq_v_b","trimmerSupport","generateTrimmer","wordCharacters","startRegex","RegExp","endRegex","token","update","replace","global","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","call","build","version","utils","warn","message","console","asString","obj","toString","clone","undefined","Object","create","keys","key","val","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","n","indexOf","fieldRef","prototype","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","push","concat","idf","posting","documentCount","documentsWithTerm","x","Math","log","abs","Token","str","metadata","fn","tokenizer","map","t","toLowerCase","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","runString","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","step2list","step3list","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","GenStateSuspendedStart","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_arrayLikeToArray","arr2","_arrayWithoutHoles","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","F","e","_e","normalCompletion","didErr","step","_e2","_defineProperty","_iterableToArray","from","_nonIterableSpread","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","_unsupportedIterableToArray","minLen"],"sourceRoot":""}